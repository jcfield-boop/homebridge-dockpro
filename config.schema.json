{
  "pluginAlias": "SleepMeBasic",
  "pluginType": "platform",
  "singular": true,
  "schema": {
    "type": "object",
    "properties": {
      "name": {
        "title": "Platform Name",
        "type": "string",
        "default": "SleepMe Basic",
        "required": true
      },
      "apiToken": {
        "title": "API Token",
        "type": "string",
        "format": "password",
        "description": "Your SleepMe API token (obtain from your account at sleep.me)",
        "required": true
      },
      "unit": {
        "title": "Temperature Unit",
        "type": "string",
        "default": "C",
        "enum": ["C", "F"],
        "enumNames": ["Celsius (°C)", "Fahrenheit (°F)"],
        "description": "Select preferred temperature unit"
      },
      "advanced": {
        "type": "object",
        "title": "Advanced Settings",
        "expandable": true,
        "expanded": false,
        "properties": {
          "debugMode": {
            "title": "Debug Mode",
            "type": "boolean",
            "default": false,
            "description": "Enable verbose logging for troubleshooting"
          },
          "pollingInterval": {
            "title": "Polling Interval",
            "type": "integer",
            "default": 60,
            "minimum": 30,
            "maximum": 300,
            "description": "How frequently to check device status (in seconds)"
          },
          "scheduler": {
            "title": "Temperature Scheduler",
            "type": "object",
            "properties": {
              "enabled": {
                "title": "Enable Scheduling",
                "type": "boolean",
                "default": false,
                "description": "Turn on temperature scheduling functionality"
              },
              "schedules": {
                "title": "Device Schedules",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "deviceId": {
                      "title": "Device",
                      "type": "string",
                      "description": "Select the device for this schedule",
                      "required": true,
                      "format": "dynamic-device-id"
                    },
                    "scheduleItems": {
                      "title": "Schedule Items",
                      "type": "array",
                      "maxItems": 100,
                      "items": {
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "title": "Enabled",
                            "type": "boolean",
                            "default": true,
                            "description": "Enable/disable this schedule item"
                          },
                          "dayType": {
                            "title": "Day Type",
                            "type": "string",
                            "enum": ["everyday", "weekday", "weekend", "specific"],
                            "enumNames": ["Every Day", "Weekdays Only", "Weekends Only", "Specific Day"],
                            "default": "everyday",
                            "description": "Select which days this schedule should run"
                          },
                          "specificDay": {
                            "title": "Specific Day",
                            "type": "string",
                            "enum": ["0", "1", "2", "3", "4", "5", "6"],
                            "enumNames": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                            "default": "1",
                            "description": "If Specific Day is selected above, choose the day",
                            "condition": {
                              "functionBody": "return model.dayType === 'specific'"
                            }
                          },
                          "time": {
                            "title": "Time",
                            "type": "string",
                            "format": "time",
                            "description": "Time in 24-hour format (HH:MM)",
                            "placeholder": "13:30",
                            "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
                            "required": true
                          },
                          "temperature": {
                            "title": "Temperature",
                            "type": "number",
                            "minimum": 13,
                            "maximum": 46,
                            "multipleOf": 0.5,
                            "default": 21,
                            "description": "Target temperature in Celsius (13-46°C)",
                            "required": true
                          },
                          "warmHug": {
                            "title": "Warm Hug",
                            "type": "boolean",
                            "default": false,
                            "description": "Gradually increase temperature before this time"
                          },
                          "warmHugDuration": {
                            "title": "Warm Hug Duration",
                            "type": "integer",
                            "minimum": 5,
                            "maximum": 60,
                            "default": 20,
                            "description": "Duration of warm-up in minutes before target time",
                            "condition": {
                              "functionBody": "return model.warmHug === true"
                            }
                          }
                        },
                        "required": ["time", "temperature"]
                      }
                    }
                  },
                  "required": ["deviceId"]
                }
              }
            }
          }
        }
      }
    },
    "required": ["apiToken"]
  },
  "layout": [
    "name",
    "apiToken",
    "unit",
    {
      "key": "advanced",
      "type": "section",
      "expandable": true,
      "expanded": false,
      "items": [
        "advanced.debugMode",
        "advanced.pollingInterval",
        {
          "key": "advanced.scheduler",
          "type": "section",
          "expandable": true,
          "expanded": false,
          "items": [
            "advanced.scheduler.enabled",
            {
              "key": "advanced.scheduler.schedules",
              "type": "array",
              "buttonText": "Add Device Schedule",
              "items": [
                {
                  "key": "advanced.scheduler.schedules[].deviceId",
                  "type": "select"
                },
                {
                  "key": "advanced.scheduler.schedules[].scheduleItems",
                  "type": "array",
                  "buttonText": "Add Schedule Item",
                  "items": [
                    "advanced.scheduler.schedules[].scheduleItems[].enabled",
                    "advanced.scheduler.schedules[].scheduleItems[].dayType",
                    "advanced.scheduler.schedules[].scheduleItems[].specificDay",
                    "advanced.scheduler.schedules[].scheduleItems[].time",
                    "advanced.scheduler.schedules[].scheduleItems[].temperature",
                    "advanced.scheduler.schedules[].scheduleItems[].warmHug",
                    "advanced.scheduler.schedules[].scheduleItems[].warmHugDuration"
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "customUiSchema": {
    "ui:accordion": ["advanced"],
    "advanced.scheduler.schedules": {
      "items": {
        "ui:accordion": ["scheduleItems"]
      }
    }
  },
  "schema:dynamic-device-id": {
    "action": "getDynamicDeviceIds",
    "label": "Select Device"
  }
}